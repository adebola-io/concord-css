@use 'sass:math';
// Margins and Paddings
$spacings: (0, 1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 35, 40, 50);
$automatic: (auto, initial, inherit, revert);
$directions: ('left', right, top, bottom);
@each $space in $spacings {
    .m#{$space} {
        margin: #{$space}+'%';
    }

    .p#{$space} {
        padding: #{$space}+'%';
    }
    
    .mx-#{$space} {
        margin-left: #{$space}+'%';
        margin-right: #{$space}+'%';
    }

    .my-#{$space} {
        margin-top: #{$space}+'%';
        margin-bottom: #{$space}+'%';
    }

    .px-#{$space} {
        padding-left: #{$space}+'%';
        padding-right: #{$space}+'%';
    } 

    .py-#{$space} {
        padding-top: #{$space}+'%';
        padding-bottom: #{$space}+'%';
    }

    @each $direction in $directions {
        .m#{$direction}-#{$space}{
            margin-#{$direction}: #{$space}+'%';
        }
        .p#{$direction}-#{$space} {
            padding-#{$direction}: #{$space}+'%';
        }
    }
}
@each $property in $automatic{
    .m#{$property} {
        margin: #{$property};
    }

    .p#{$property} {
        padding: #{$property};
    }

    @each $direction in $directions {
        .m#{$direction}-#{$property} {
            margin-#{$direction}: #{$property};
        }

        .p#{$direction}-#{$property} {
            padding-#{$direction}: #{$property}; 
        }

        .mx-#{$property} {
            margin-left: #{$property};
            margin-right: #{$property};
        }

        .my-#{$property} {
            margin-top: #{$property};
            margin-bottom: #{$property};
        }

        .px-#{$property} {
            padding-left: #{$property};
            padding-right: #{$property};
        }

        .py-#{$property} {
            padding-top: #{$property};
            padding-bottom: #{$property};
        }


    }
}

// Colors for Text, Borders, Backgrounds, and Placeholders.
$colors: (('white', #ffffff), ('black', #000000), ('offwhite', #f0f0f0), 
          ('lightwhite', #f9f9f9),
          ('offblack', #151515), ('charcoal', #202020), ('grey', #808080),
          ('red', #ff0000), ('lightred', #fd4545), ('darkred', #8b0000),
          ('orange', #ffa500), ('darkorange', #ff8c00), ('yellow', #ffff00),
          ('darkyellow', #c9c905), ('lightgreen', lightgreen), ('green', green),
          ('darkgreen', darkgreen), ('themed', 'var(--themeColor)'),
          ('lightblue', blue), ('blue', #0000ff), ('nickelblue', #2a2afd),
          ('darkblue', darkblue), ('indigo', indigo), ('darkindigo', #320253),
          ('violet', violet), ('purple', purple), ('darkpurple', #5c005c),
          ('gold', gold), ('darkgold', #daa520), ('wheat',#f5deb3),
          ('pink', pink), ('darkpink', #d37887), ('brown', #805d35),
          ('transparent', transparent));
@each $c in $colors {
    .txt-#{nth($c, 1)}{
        color: #{nth($c, 2)};
    }
    .hvr--txt-#{nth($c, 1)}:hover {
        color: #{nth($c, 2)};
    }
    .placeholder-color-#{nth($c, 1)}::placeholder {
        color: #{nth($c, 2)};
    }
    .bg-#{nth($c, 1)}{
        background-color: #{nth($c, 2)};
    }
    .hvr--bg-#{nth($c, 1)}:hover {
        background-color: #{nth($c, 2)};
    }
    .brdr-#{nth($c, 1)}{
        border-color: #{nth($c, 2)};
    }
    .hvr--_brdr-#{nth($c, 1)}:hover {
        border-color: #{nth($c, 2)};
    }
}

// Filters
$filters: (0, 10, 25, 50, 75, 100);
@each $f in $filters {
    .opacity-#{$f}{
        opacity: #{$f};
    }
    .hvr--opacity-#{$f}:hover {
        opacity: #{$f};
    }
    $d: math.div($f, 100);
    .brightness-#{$f} {
        filter: brightness(#{$d});
    }
    .hvr--brightness-#{$f}:hover {
        filter: brightness(#{$d});
    }
}

// Borders
$borderSizes: (('slim', 2), ('thin', 1), ('thick', 4), (none, 0));
$borderCurvings: (1, 3, 4, 5, 8, 10, 13, 20);

@each $borderSize in $borderSizes {
    .brdr-#{nth($borderSize, 1)} {
        border-width: #{nth($borderSize, 2)}px;
        border-style: solid;
    }
    .hvr--brdr-#{nth($borderSize, 1)}:hover {
            border-width: #{nth($borderSize, 2)}px;
            border-style: solid;
    }

    @each $direction in $directions {
        .brdr-#{$direction}-#{nth($borderSize, 1)} {
            border-#{$direction}-width: #{nth($borderSize, 2)}px;
            border-#{$direction}-style: solid;
        }
        .hvr--brdr-#{$direction}-#{nth($borderSize, 1)}:hover {
            border-#{$direction}-width: #{nth($borderSize, 2)}px;
            border-#{$direction}-style: solid;
        }
    }
}
@each $borderCurve in $borderCurvings {
    .brdr-curve-#{$borderCurve}px{
        border-radius: #{$borderCurve}px;
    }
    .hvr--brdr-curve-#{$borderCurve}px:hover {
        border-radius: #{$borderCurve}px;
    }
}

// Gradients for Backgrounds 
$gradients: (
    ('sky', (270deg, #9f9fec, transparent)),
    ('banana', (155deg, #382304, #d8a104, #9a5c02, #ffff00)),
    ('glass', (108deg, #bdbdbd9e, #ffffffe0)),
    ('matte', (212deg, #1f1e1e, #101010)),
    ('snow', (167deg, #b5d4e6, #6ba0f1, #aebdde)),
    ('sprite', (270deg, #72f081, transparent)),
    ('aurora', (144deg, transparent, #f3238c, purple)),
    ('hardblue', (44deg, #1b1b7b, #010154)),
    ('royal', (128deg, #270618, #27063c, #3f0865)),
    ('pinkglass', (128deg, #a399a9, #efe0f9, #cb71ef))
    );
@each $gradient in $gradients {
    .bg-#{nth($gradient, 1)}{
        background-image: linear-gradient(#{nth($gradient, 2)});
    }
    .hvr--bg-#{nth($gradient, 1)}:hover {
        background-image: linear-gradient(#{nth($gradient, 2)});
    }
}

// Fonts
$fonts: (9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 25, 30, 35, 36, 37, 40, 42, 43, 44 45, 50, 55);

@each $font in $fonts {
    .fnt-#{$font}pt {
        font-size: #{$font}pt;
    }
    .hvr--fnt-#{$font}pt:hover {
        font-size: #{$font}pt;
    }
}

// Sizes
$sizes: (0, 5, 10, 12, 13, 14, 15, 20, 35, 40, 45, 50, 60, 75, 85, 90, 92, 95, 96, 97, 98, 99, 100, 120, 150, 200, 300, 400, 500,);
$autoSizes: (initial, fit-content, inherit);
$specialSizes: (('half', 50), ('third', 33.3333),('quarter', 25), ('quint', 20));
@each $size in $sizes{
    .w#{$size}{
        width: #{$size}+'%';
    }
    .h#{$size}{
        height: #{$size}+'%';
    }
    .s#{$size}{
        width: #{$size}+'%';
        height: #{$size}+'%';
    }
    .up-#{$size}{
        transform: translateY(-#{$size}+'%');
    }
    .down-#{$size} {
        transform: translateY(#{$size}+'%');
    }
}
@each $autoSize in $autoSizes {
        .w-#{$autoSize} {
            width: #{$autoSize};
        }

        .h-#{$autoSize} {
            height: #{$autoSize};
        }
}
@each $specialSize in $specialSizes {
    .w-#{nth($specialSize, 1)} {
        width: #{nth($specialSize, 2)}+'%';
    }
    .h-#{nth($specialSize, 1)} {
        height: #{nth($specialSize, 2)}+'%';
    }
}
//Transitions 
$times: (250, 300, 450, 600, 900);
@each $time in $times {
    .time-#{$time}ms {
        transition-duration: #{$time}ms;
    }
}

// Z-index 
$zindexes: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 97, 98, 99);
@each $zindex in $zindexes {
    .layer-#{$zindex} {
        z-index: #{$zindex};
    }
}